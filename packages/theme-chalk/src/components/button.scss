@use 'sass:map';
@use '../mixins/mixins.scss' as *;
@use '../mixins/button' as *;

$button: () !default;
$button: map.merge(
  (
    'bg-color': getCssVar('fill-color', 'blank'),
    'text-color': getCssVar('text-color', 'regular'),
    'border-color': getCssVar('border-color'),
    // hover样式
    'text-color-hover': getCssVar('color-primary'),
    'border-color-hover': getCssVar('color-primary', 'light-7'),
    // active样式
    'text-color-active': getCssVar('color-primary'),
    'border-color-active': getCssVar('color-primary'),
    // disabled样式
    'bg-color-disabled': getCssVar('fill-color', 'blank'),
    'text-color-disabled': getCssVar('text-color', 'disabled'),
    'border-color-disabled': getCssVar('border-color-light'),
    padding-vertical: 8px,
    padding-horizontal: 15px,
    // small
    padding-vertical-small: 5px,
    padding-horizontal-small: 10px,
    height-small: 20px,
    // large
    padding-vertical-large: 15px,
    padding-horizontal-large: 25px,
    height-large: 40px,

    // 字体大小
    // small
    font-size-small: 12px,
    // large
    font-size-large: 15px,

    border-radius-base: getCssVar('border-radius', 'base'),
    box-shadow: none,
    box-shadow-hover: none,
  ),
  $button
);

@include b(button) {
  @include set-component-css-var(button, $button);
}

@include b(button) {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 4px;

  line-height: 1;
  text-align: center;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  transition: 0.1s;

  color: getCssVar('button', 'text-color');
  background-color: getCssVar('button', 'bg-color');
  border: getCssVar('border');
  border-color: getCssVar('button', 'border-color');
  border-radius: getCssVar('button', 'border-radius-base');

  padding: getCssVar('button', 'padding-vertical')
    getCssVar('button', 'padding-horizontal');

  &:hover {
    color: getCssVar('button', 'text-color-hover');
    background-color: getCssVar('button', 'bg-color-hover');
    border-color: getCssVar('button', 'border-color-hover');
  }
  &:active {
    color: getCssVar('button', 'text-color-active');
    background-color: getCssVar('button', 'bg-color-active');
    border-color: getCssVar('button', 'border-color-active');
  }

  @include when(disabled) {
    &,
    &:hover {
      color: getCssVar('button', 'text-color', 'disabled');
      cursor: not-allowed;
      background-image: none;
      background-color: getCssVar('button', 'bg-color', 'disabled');
      border-color: getCssVar('button', 'border-color', 'disabled');
    }
  }

  @include when(text) {
    background-color: transparent;
    border: none;
    color: getCssVar('button', 'text-color');

    @include when(disabled) {
      color: getCssVar('button', 'disabled', 'text-color');
      background-color: transparent !important;
    }

    @include when(disabled, true) {
      &:hover {
        background-color: getCssVar('fill-color', 'light');
      }
      &:active {
        background-color: getCssVar('fill-color');
      }
    }
  }

  @each $size in (large, default, small) {
    @include button-round($size);
    @include m($size) {
      line-height: 1;
      @if $size != 'default' {
        padding: 0 getCssVar('button', 'padding-horizontal-' + $size);
        font-size: getCssVar('button', 'font-size-' + $size);
        height: getCssVar('button', 'height-' + $size);
      }
    }
  }

  // 设置不同类型的颜色
  @each $type in (primary, success, warning, danger, info) {
    // .sp-button--primary ...
    @include m($type) {
      @include button-variant($type);
    }
  }

  & + & {
    margin-left: 12px;
  }
}
